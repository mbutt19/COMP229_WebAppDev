@model RecipeViewModel
@{
    ViewData["Title"] = "Create";
}

<div class="container">
    <h1 class="label-info" id="h1Format"><b>Add Recipe</b></h1>
    <form class="form-group-sm table-bordered bg-warning" asp-action="Create" method="post">
        <input type="hidden" asp-for="Recipe.RecipeID" />
        <div class="form-group-sm">
            <label class="labelled">Recipe Name: </label>
            <div><span asp-validation-for="Recipe.Name"></span></div>
            <input asp-for="Recipe.Name" class="form-control" id="Name" />
        </div>
        <div class="form-group-sm">
            <label class="labelled">Description: </label>
            <div><span asp-validation-for="Recipe.Description"></span></div>
            <input asp-for="Recipe.Description" class="form-control" id="Description" placeholder="A brief despcription of the recipe" />
        </div>
        <div class="row">
            <div class="form-group-sm col-md-4">
                <label class="labelled">Servings: </label>
                <input asp-for="Recipe.Servings" class="form-control" id="Servings" />
                <div><span asp-validation-for="Recipe.Servings"></span></div>
            </div>
            <div class="form-group-sm col-md-4">
                <label class="labelled">Prep minutes: </label>
                <input asp-for="Recipe.PrepMinutes" class="form-control" id="PrepMin" />
                <div><span asp-validation-for="Recipe.PrepMinutes"></span></div>
            </div>
            <div class="form-group-sm col-md-4">
                <label class="labelled">Cook minutes: </label>
                <input asp-for="Recipe.CookMinutes" class="form-control" id="CookMin" />
                <div><span asp-validation-for="Recipe.CookMinutes"></span></div>
            </div>
            <div class="form-group-sm col-md-12 increaseTop">
                <br />
                <label class="labelled">Directions: </label>
                <textarea asp-for="Recipe.Directions" rows="5" class="form-control" id="Directions" placeholder="Enter directions separated by periods."></textarea>
                <div><span asp-validation-for="Recipe.Directions"></span></div>
            </div>
        </div>
        <div class="row">
           
            @for (int x = 0; x < Model.Ingredients.Count(); x++)
            {
                @Html.HiddenFor(i => i.Ingredients[x].IngredientID)
                <div class="col-sm-2">
                    @Html.LabelFor(i => i.Ingredients[x].Amount, new { @class = "labelled" })
                    <h6>@Html.EditorFor(i => i.Ingredients[x].Amount, new { htmlAttributes = new { @class = "form-control" } })</h6>
                    @Html.ValidationMessageFor(i => i.Ingredients[x].Amount, "", new { @class = "input-validation-error" })
                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(i => i.Ingredients[x].Unit, new { @class = "labelled" })
                    <h6>@Html.EditorFor(i => i.Ingredients[x].Unit, new { htmlAttributes = new { @class = "form-control" } })</h6>
                    @Html.ValidationMessageFor(i => i.Ingredients[x].Unit, "", new { @class = "input-validation-error" })
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(i => i.Ingredients[x].Name, new { @class = "labelled"  })
                    <h6>@Html.EditorFor(i => i.Ingredients[x].Name, new { htmlAttributes = new { @class = "form-control" } })</h6>
                    @Html.ValidationMessageFor(i => i.Ingredients[x].Name, "", new { @class = "input-validation-error" })
                </div>
            }
        </div>
        <br />
        <div class="text-center">
            <br />
            <button class="btn btn-primary formBtn" type="submit">Add</button>
            <button class="btn btn-primary formBtn" asp-action="List">Back To List</button>
        </div>
    </form>
</div>

